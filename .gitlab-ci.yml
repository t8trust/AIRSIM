# Cache downloaded dependencies and plugins between builds.
# Not strictly necessary, but speeds up the builds.

deploy:
  only:
    - main
  image: node:20.11.1 # docker image with Node
  
  before_script:
    # The runners on the forge need a proxy to access the web. mvn
    # ignores the $http_proxy & friends variable => write a
    # configuration file that does this for us.
    - chmod 400 $CI_SSH_KEY
    # Useful only for debugging

  script:
    - cd mif10-frontend/
    - npm install
    - npm run build
    - cd ../mif10-backend
    - npm install
    - npm run build
    - cd ..
    # Only after everything is built correctly, transfer the files 
    - ssh -o StrictHostKeyChecking=no -i $CI_SSH_KEY gitlabci@192.168.75.63 "killall -q node; exit 0" # exit node process
    - ssh -o StrictHostKeyChecking=no -i $CI_SSH_KEY gitlabci@192.168.75.63 "rm -rf /usr/share/nginx/html/*; rm -rf /usr/share/nodejs-backend/server/*"
    - scp -r -o StrictHostKeyChecking=no -i $CI_SSH_KEY ./mif10-frontend/dist/* gitlabci@192.168.75.63:/usr/share/nginx/html/
    - scp -r -o StrictHostKeyChecking=no -i $CI_SSH_KEY ./mif10-backend/dist/* gitlabci@192.168.75.63:/usr/share/nodejs-backend/server/
    # Unfortunately, the server has not enough ram to install npm packages itself
    - scp -r -o StrictHostKeyChecking=no -i $CI_SSH_KEY ./mif10-backend/node_modules/ gitlabci@192.168.75.63:/usr/share/nodejs-backend/server/
    # Launch start script (node /usr/share/nodejs-backend/server/main.js)
    - ssh -o StrictHostKeyChecking=no -i $CI_SSH_KEY gitlabci@192.168.75.63 "source ~/.nvm/nvm.sh; nohup /usr/share/nodejs-backend/start.sh </dev/null >/dev/null 2>&1 &; exit 0"


